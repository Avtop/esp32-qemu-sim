name: 'Test QEmu'


env:
  #QEMU_BIN: ./qemu-git/build/qemu-system-xtensa
  #ESPTOOL: ./esptool/esptool.py
  #BOOT_APP0_URL: https://github.com/espressif/arduino-esp32/raw/master/tools/partitions/boot_app0.bin
  #DEFAULT_DEVICE: esp32
  #DEFAULT_BOOTLOADER_ADDR: "0x1000"
  #DEFAULT_PARTITIONS_ADDR: "0x8000"
  #DEFAULT_BOOT_APP0_ADDR: "0xe000"
  #DEFAULT_FIRMWARE_ADDR: "0x10000"
  #DEFAULT_SPIFFS_ADDR: "0x290000"
  #DEFAULT_FLASH_SIZE: 4
  #QEMU_TIMEOUT: 60 # seconds

inputs:
  flash-size:
    description: "Flash Size (MB)"
    default: "4"
  qemu-timeout:
    description: "QEmu timeout"
    default: "60"
  build-folder:
    description:  "Build folder"
    default: ./build
  bootloader-address:
    description: "Bootloader Address"
    default: "0x1000"
  partitions-address:
    description: "Partitions address"
    default: "0x8000"
  spiffs-address:
    description: "Spiffs address"
    default: "0x290000"
  partitions-csv:
    description: "Path to partitions.csv"
    default: partitions.csv
  otadata-bin:
    description: "Path to boot_app0.bin"
    default: boot_app0.bin
  firmware-bin:
    description: "Path to app0.bin"
    default: firmware.bin
  partitions-bin:
    description: "Path to partitions.bin"
    default: partitions.bin
  bootloader-bin:
    description: "Path to bootloader.bin"
    default: bootloader.bin
  spiffs-bin:
    description: "Path to spiffs.bin"
    default: spiffs.bin


runs:
  using: "composite"
  steps:

    - name: Cache QEmu build
      uses: actions/cache@v3
      id: cache-qemu
      with:
        path: './qemu-git'
        key: qemu-system-xtensa
        restore-keys: |
          ${{ runner.os }}-qemu-

    - name: Checkout qemu-xtensa with flash size fix
      if: steps.cache-qemu.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: listout/qemu
        path: './qemu-git'
        ref: 'fix-flash-size'

    - name: Build QEmu
      if: steps.cache-qemu.outputs.cache-hit != 'true'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install ninja-build cmake
        ninja --version
        cmake --version
        gcc --version
        cd qemu-git
        ./configure --target-list=xtensa-softmmu \
            --enable-gcrypt \
            --enable-debug --enable-sanitizers \
            --disable-strip --disable-user \
            --disable-capstone --disable-vnc \
            --disable-sdl --disable-gtk
        ninja -C build

    - name: Setup Python 3.7
      uses: actions/setup-python@v4
      with:
        python-version: '3.7'

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Setup pyserial
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade pyserial

    - name: Checkout esptool.py
      uses: actions/checkout@v3
      with:
        repository: espressif/esptool
        path: './esptool'

    - name: Run Build in QEmu
      env:
        ENV_FLASH_SIZE : ${{ inputs.flash-size }}
        ENV_QEMU_TIMEOUT : ${{ inputs.qemu-timeout }}
        ENV_BUILD_FOLDER : ${{ inputs.build-folder }}
        ENV_BOOTLOADER_ADDR : ${{ inputs.bootloader-address }}
        ENV_PARTITIONS_ADDR : ${{ inputs.partitions-address }}
        ENV_SPIFFS_ADDR : ${{ inputs.spiffs-address }}
        ENV_PARTITIONS_CSV : ${{ inputs.partitions-csv }}
        ENV_OTADATA_BIN : ${{ inputs.otadata-bin }}
        ENV_FIRMWARE_BIN : ${{ inputs.firmware-bin }}
        ENV_PARTITIONS_BIN : ${{ inputs.partitions-bin }}
        ENV_BOOTLOADER_BIN : ${{ inputs.bootloader-bin }}
        ENV_SPIFFS_BIN : ${{ inputs.spiffs-bin }}
      run: ${{ github.action_path }}/run-build-in-qemu.sh
      shell: bash

    # - name: Create firmware for QEmu
    #   shell: bash
    #   run: |
    #     ./esptool/esptool.py --chip esp32 merge_bin --fill-flash-size ${{ inputs.flash-size }}MB -o flash_image.bin \
    #       ${{ inputs.bootloader-address }} ${{ inputs.bootloader-bin }} \
    #       ${{ inputs.partitions-address }} ${{ inputs.partitions-bin }} \
    #       ${{ env.BOOT_APP0_ADDR }} ${{ inputs.boot_app0-bin }} \
    #       ${{ env.FIRMWARE_ADDR }} ${{ inputs.firmware-bin }} \
    #       ${{ env.SPIFFS_ADDR }} ${{ inputs.spiffs-bin }}
    #
    # - name: Load firmware in QEmu
    #   # qemu-system-xtensa -nographic -no-reboot -machine esp32 -drive file=firmware.bin,if=mtd,format=raw
    #   shell: bash
    #   run: |
    #     (./qemu-git/build/qemu-system-xtensa -nographic -machine esp32 -drive file=flash_image.bin,if=mtd,format=raw | tee -a ./logs.txt) &
    #     sleep ${{ inputs.qemu-timeout }}
    #     killall qemu-system-xtensa || true

    - name: Upload logs as artifact
      uses: actions/upload-artifact@v3
      with:
        name: Qemu Logs
        path: |
          ./logs.txt

